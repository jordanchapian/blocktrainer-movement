
import React  from 'react';

import _ from 'lodash';
import PropTypes from 'prop-types';
import CUI_CONST from './CiscoUIConstants.jsx';
import Icon from './Icon.jsx';

class Switch extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            disabled: props.disabled,
            checked: props.checked,
            required: props.required,
        };

        this.onChange = this.onChange.bind(this);
    }


    onChange(event) {
        let checked = event.target.checked;
        this.setState({checked: checked});
        this.props.onChange(checked);
    }

    render() {

        let class_names = [];

        if(!_.isEmpty(this.props.icons)) {
            class_names.push('switch-icon');
        } else {
            class_names.push('switch');
        }

        if(this.props.size) {
            class_names.push(`switch--${this.props.size}`);
        }

        let class_name = _.filter(class_names).join(' ');


        let label_left;
        let label_right = this.props.label;

        if(label_right && _.isArray(label_right)){
            [label_left, label_right] = label_right;
        }


        return (
            <label className={class_name} disabled={this.state.disabled}>

                <input type="checkbox"
                    id={this.props.id}
                    name={this.props.name || this.props.id}

                    checked={this.state.checked}
                    required={this.state.required}
                    disabled={this.state.disabled}

                    onChange={this.onChange}
                />

                {label_left &&
                    <span className="switch__label">{label_left}</span>
                }

                <span className="switch__input">
                    {this.props.icons && <Icon icon={this.props.icons[0]}/> }
                    {this.props.icons && ' '}
                    {this.props.icons && <Icon icon={this.props.icons[1]}/> }
                </span>

                {label_right &&
                    <span className="switch__label">{label_right}</span>
                }

            </label>
        )
    }
}

Switch.defaultProps = {
    size: 'base',
    icons: [],
    checked: false,
    required: false,
    disabled: false,
    label: null,
    onChange: function(){},
};


Switch.propTypes = {
    id: PropTypes.string,
    name: PropTypes.string,
    disabled: PropTypes.bool,
    checked: PropTypes.bool,
    required: PropTypes.bool,
    size: PropTypes.oneOfType(CUI_CONST.SWITCH_SIZES),
    label: PropTypes.oneOfType([
        PropTypes.arrayOf(
            PropTypes.oneOfType([
                PropTypes.string,
                PropTypes.number,
            ])
        ),
        PropTypes.string,
        PropTypes.number,
    ]),
    onChange: PropTypes.func,
};

export default Switch;