
import React  from 'react';
import PropTypes from 'prop-types';
import CUI_CONST from './CiscoUIConstants.jsx';


class Select extends React.Component {

    constructor(props) {
        super(props);

        this.state = {
            required: props.required,
            disabled: props.disabled,
        };

        this.onChange = this.onChange.bind(this);
    }

    render() {

        let current_value = this.state.value;

        let select_items = this.props.options.map((obj) =>
            <option
                key={obj.value || obj}
                value={obj.value || obj}
            >
                {obj.label || obj}
            </option>
        );

        return (
            <div className="form-group">
                <div className="form-group__text select" disabled={this.state.disabled}>
                    <select value={current_value}
                        id={this.props.id}
                        name={this.props.name || this.props.id}
                        required={this.state.required}
                        disabled={this.state.disabled}
                        onChange={this.onChange}
                    >
                        {select_items}
                    </select>

                    {this.props.label &&
                    <label htmlFor={this.props.name || this.props.id}>{this.props.label}</label>
                    }
                </div>
            </div>
        )
    }

    onChange(e){
        let value = e.target.value;
        this.props.onChange(e, value);
    }
}

Select.defaultProps = {
    disabled: false,
    required: false,
    value: null,
    options: [],
    onChange: function(){},
};


Select.propTypes = {
    label: PropTypes.string,
    id: PropTypes.string,
    name: PropTypes.string,
    disabled: PropTypes.bool,
    required: PropTypes.bool,
    value: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.number,
    ]),
    options: PropTypes.arrayOf(
        PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.number,
            PropTypes.shape({
                value: PropTypes.oneOfType([
                    PropTypes.number, PropTypes.string
                ]),
                label: PropTypes.oneOfType([
                    PropTypes.number, PropTypes.string
                ]),
            })
        ])
    ),
    onChange: PropTypes.func,
};

export default Select;