
import React  from 'react';

import PropTypes from 'prop-types';
import CUI_CONST from './CiscoUIConstants.jsx';


/**
 * Parent will have to handle onClose()
 */
class Label extends React.Component {

    render() {
        let classes = ['label'];

        if(this.props.size){
            classes.push(`label--${this.props.size}`);
        }
        if(this.props.color){
            classes.push(`label--${this.props.color}`);
        }
        if(this.props.raised){
            classes.push(`label--raised`);
        }
        if(this.props.bordered){
            classes.push(`label--bordered`);
        }
        if(this.props.circle){
            classes.push(`label--circle`);
        }

        return (
            <span className={classes.join(' ')}>

                {this.props.children}
                {this.props.onClose &&
                    <Icon
                        icon="close"
                        onClick={this.props.onClose}
                    />
                }
            </span>
        );
    }
}

Label.defaultProps = {
    size: 'default',
    color: null,
    raised: false,
    bordered: false,
    // TODO: make it removable?
    // onClose: null,
    circle: false,
};


Label.propTypes = {
    size: PropTypes.oneOf(CUI_CONST.LABEL_SIZES),
    color: PropTypes.oneOf(CUI_CONST.LABEL_COLORS),
    raised: PropTypes.bool,
    bordered: PropTypes.bool,
    circle: PropTypes.bool,

    // onClose: PropTypes.func,
};

export default Label;